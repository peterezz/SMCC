//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMCC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SMCC_SystemEntities3 : DbContext
    {
        public SMCC_SystemEntities3()
            : base("name=SMCC_SystemEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<CourseAppointment> CourseAppointments { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Student_Course> Student_Course { get; set; }
        public virtual DbSet<StudentName> StudentNames { get; set; }
        public virtual DbSet<StudentPhoneNumber> StudentPhoneNumbers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int appointmentCheck(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string day1, string day2, string day3, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endTime, Nullable<int> classID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var day1Parameter = day1 != null ?
                new ObjectParameter("day1", day1) :
                new ObjectParameter("day1", typeof(string));
    
            var day2Parameter = day2 != null ?
                new ObjectParameter("day2", day2) :
                new ObjectParameter("day2", typeof(string));
    
            var day3Parameter = day3 != null ?
                new ObjectParameter("day3", day3) :
                new ObjectParameter("day3", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.TimeSpan));
    
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("appointmentCheck", startDateParameter, endDateParameter, day1Parameter, day2Parameter, day3Parameter, startTimeParameter, endTimeParameter, classIDParameter);
        }
    }
}
